Задание 1. СУБД
Кейс
Крупная строительная компания, которая также занимается проектированием и девелопментом, решила создать правильную архитектуру для работы с данными. Ниже представлены задачи, которые необходимо решить для каждой предметной области.
Какие типы СУБД, на ваш взгляд, лучше всего подойдут для решения этих задач и почему?
1.1. Бюджетирование проектов с дальнейшим формированием финансовых аналитических отчетов и прогнозирования рисков. СУБД должна гарантировать целостность и чёткую структуру данных.
ОТВЕТ:
Выбор - реляционная БД для работы с данными в табличной форме с информацией по объекту для составления отчетов, проведения аналитической работы и формирования прогнозов на основе накопленных данных.
1.2. Под каждый девелоперский проект создаётся отдельный лендинг, и все данные по лидам стекаются в CRM к маркетологам и менеджерам по продажам. Какой тип СУБД лучше использовать для лендингов и для CRM? СУБД должны быть гибкими и быстрыми.
ОТВЕТ:
Для CRM - реляционнаяБД
Для Лендингов - тоже реляционная СУБД.
1.3. Отдел контроля качества решил создать базу по корпоративным нормам и правилам, обучающему материалу и так далее, сформированную согласно структуре компании. СУБД должна иметь простую и понятную структуру.
ОТВЕТ:
БД с использование связки ключ-значение. Запросил по ключу и получил связанную с ним информацию.
1.4. Департамент логистики нуждается в решении задач по быстрому формированию маршрутов доставки материалов по объектам и распределению курьеров по маршрутам с доставкой документов. СУБД должна уметь быстро работать со связями.
ОТВЕТ:
Графовые БД - специфичный тип, предназначены для работы с графами, с их узлами, свойствами, и произвольными отношениями между узлами.
1.4.* Можно ли к этой СУБД подключить отдел закупок или для них лучше сформировать свою СУБД в связке с СУБД логистов?
ОТВЕТ: Полагаю, что возможно реализовать и то и другое, но второй вариант будет предпочтительней исходя из возложенных на структурные подразделения задач
Задание 2. Транзакции
2.1. Пользователь пополняет баланс счёта телефона, распишите пошагово, какие действия должны произойти для того, чтобы транзакция завершилась успешно. Ориентируйтесь на шесть действий.
ОТВЕТ:
Открытие транзакции. Открытие соединения с БД Банка;
Обращение к счету в банке и проверка наличия необходимых к переводу средств;
Блокировка для списания со счета в банке необходимой суммы;
Открытие соединения с БД Оператора сотовой связи;
Зачисление на лицевой счет суммы, равной списанной суммы со счета в банке;
Коммит изменений. Закрытие транзакции.
2.1.* Какие действия должны произойти, если пополнение счёта телефона происходило бы через автоплатеж?
ОТВЕТ:
То же самое только без участия пользователя.
Задание 3. SQL vs NoSQL
3.1. Напишите пять преимуществ SQL-систем по отношению к NoSQL.
ОТВЕТ:
SQL-базы данных имеют лучшую поддержку транзакционности, что позволяет автоматически откатывать изменения при обнаружении проблемных транзакций и, таким образом, нивелировать возможные проблемы безопасности;
В SQL можно легко установить ограничения на доступ к данным для разных пользователей, а также применять различные аутентификационные механизмы для обеспечения безопасности данных;
Кэширование в SQL-базах данных позволяет улучшить производительность и более точно отслеживать изменения, что может помочь в оптимизации обработки запросов. SQL-базы данных имеют большую структурированность и лучшее соответствие этикету ACID;
SQL имеет мощный язык запросов, который позволяет обрабатывать сложные запросы;
SQL-базы данных имеют жёстко определённый формат хранения данных, что делает их наиболее подходящим выбором для представления сложных связанных данных.
ОТВЕТ:
NewSQL (англ. новый SQL) — класс реляционных СУБД, возникших на рубеже 2000-х и 2010-х годов, стремящихся совместить в себе преимущества NoSQL и транзакционные требования классических систем управления базами данных. 
Задание 4. Кластеры
Необходимо производить большое количество вычислений при работе с огромным количеством данных, под эту задачу выделено 1000 машин.
На основе какого критерия будете выбирать тип СУБД и какая модель распределенных вычислений здесь справится лучше всего и почему?
Приведите ответ в свободной форме.
ОТВЕТ:
Масштабируемость, надежность, схронизованность, ребалансировка!
Популярность языка SQL и развитие “железа” породили новое движение — распределенные базы данных с языком запросов SQL. Среди них выделяется Google Spanner, которая гарантирует linearizability — глобальный порядок записи всех транзакций. Чтобы решить такую задачу в масштабах планеты, нужно синхронизировать время на серверах БД по всему миру. Компания Google использует для этого атомные часы, а для резерва — GPS-приемники.
Однако для простых смертных атомные часы пока остаются роскошью, поэтому авторы Spanner построили аналогичную БД с несколько меньшими гарантиями на порядок транзакций, но достаточными для большинства приложений. Эта БД называется CockroachDB (от англ. “таракан”) и своим названием олицетворяет живучесть кластера при сбоях железа или связей между дата-центрами. CockroachDB предоставляет полноценные распределенные транзакции и автоматическую ребалансировку кластера при потере ноды, что, вкупе с привычным языком запросов SQL, выгодно отличает ее от Cassandra. Из недостатков стоит отметить отсутствие полнотекстовых индексов и сравнительную молодость решения.
